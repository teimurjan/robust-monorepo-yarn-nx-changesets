name: Release

on:
  push:
    branches:
      - main

jobs:
  release-libs-features:
    name: Release Libs and Features
    runs-on: ubuntu-latest
    outputs:
      publishedPackages: ${{ steps.create-release-pull-request-or-publish.outputs.publishedPackages }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - id: enable-corepack
        name: Enable Corepack
        run: corepack enable

      - id: use-node-js
        name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: "./yarn.lock"

      - id: install-dependencies
        name: Install dependencies
        run: yarn --immutable

      - id: build-packages
        name: Build packages
        run: yarn --immutable

      - id: create-release-pull-request-or-publish
        name: Create Release Pull Request or Publish to NPM
        uses: changesets/action@v1
        with:
          version: yarn changeset version
          publish: yarn release
          commit: "chore: publish new release"
          title: "chore: publish new release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - id: get-current-branch
        name: Get current branch
        run: echo "name=$(git branch --show-current)" >> $GITHUB_OUTPUT

      - id: update-lock-file
        name: Update lock file
        if: steps.get-current-branch.outputs.name == 'changeset-release/main'
        run: yarn --mode=update-lockfile

      - id: commit-lock-file
        name: Commit lock file
        if: steps.get-current-branch.outputs.name == 'changeset-release/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update lock file"
          branch: changeset-release/main

  release-apps:
    needs: release-libs-features
    name: Release Apps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - app: server/auth-api
            package: "@robust-monorepo-yarn-nx-changesets/auth-api"
          - app: client/auth-app
            package: "@robust-monorepo-yarn-nx-changesets/auth-app"
    steps:
      - uses: actions/checkout@v4

      - id: check-if-published
        name: Check if any app dependency is published
        run: |
          PUBLISHED_PACKAGES="${{ needs.release-libs-features.outputs.publishedPackages }}"
          PACKAGE_NAME="${{ matrix.package }}"
          APP="${{ matrix.app }}"

          DEPENDENCIES=$(jq -r '.dependencies // {} | keys[]' "apps/$APP/package.json")

          for DEP in $DEPENDENCIES; do
            if echo "$PUBLISHED_PACKAGES" | grep -w "$DEP"; then
              echo "published=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          echo "published=false" >> $GITHUB_OUTPUT
            - id: check-version-change

      - id: check-version-change
        name: Check if app version has changed
        run: |
          APP="${{ matrix.app }}"
          PACKAGE_JSON_PATH="apps/$APP/package.json"
          CURRENT_VERSION=$(jq -r '.version' "$PACKAGE_JSON_PATH")
          PREVIOUS_VERSION=$(git show HEAD~1:"$PACKAGE_JSON_PATH" | jq -r '.version' || echo "")

          if [[ "$CURRENT_VERSION" == "$PREVIOUS_VERSION" ]]; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - id: set-up-docker
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: get-app-version
        name: Get the app version from package.json
        run: echo "app-version=$(cat ./apps/${{ matrix.app }}/package.json | jq -r '.version')" >> $GITHUB_OUTPUT

      - id: build-image
        name: Build image
        if: steps.check-if-published.outputs.published == 'true' || steps.check-version-change.outputs.changed == 'true'
        uses: docker/build-push-action@v4
        with:
          build-contexts: |
            workspace=./
          context: "./apps/${{ matrix.app }}"
          load: true
          push: false
          tags: |
            ${{ matrix.app }}:v${{ steps.get-app-version.outputs.app-version }}
