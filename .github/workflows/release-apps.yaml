name: Release Apps

on:
  workflow_call:
    inputs:
      publishedPackages:
        description: "List of published packages"
        required: false
        type: string
        default: "[]"

  workflow_dispatch:
    inputs:
      publishedPackages:
        description: "List of published packages (optional)"
        required: false
        type: string
        default: "[]"

jobs:
  release-apps:
    name: Release Apps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - app: server/auth-api
            package: "@robust-monorepo-yarn-nx-changesets/auth-api"
          - app: client/auth-app
            package: "@robust-monorepo-yarn-nx-changesets/auth-app"
    steps:
      - uses: actions/checkout@v4

      - id: check-dependency-published
        name: Check if any app dependency is published
        run: |
          PUBLISHED_PACKAGES="${{ inputs.publishedPackages }}"
          PACKAGE_NAME="${{ matrix.package }}"
          APP="${{ matrix.app }}"

          DEPENDENCIES=$(jq -r '.dependencies // {} | keys[]' "apps/$APP/package.json")

          for DEP in $DEPENDENCIES; do
            if echo "$PUBLISHED_PACKAGES" | grep -w "$DEP"; then
              echo "published=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          echo "published=false" >> $GITHUB_OUTPUT

      - id: check-version-change
        name: Check if app version has changed
        run: |
          APP="${{ matrix.app }}"
          PACKAGE_JSON_PATH="apps/$APP/package.json"
          CURRENT_VERSION=$(jq -r '.version' "$PACKAGE_JSON_PATH")
          PREVIOUS_VERSION=$(git show HEAD~1:"$PACKAGE_JSON_PATH" | jq -r '.version' || echo "")

          if [[ "$CURRENT_VERSION" == "$PREVIOUS_VERSION" ]]; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - id: set-up-docker
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: get-app-version
        name: Get the app version from package.json
        run: echo "app-version=$(cat ./apps/${{ matrix.app }}/package.json | jq -r '.version')" >> $GITHUB_OUTPUT

      - id: build-image
        name: Build image
        if: steps.check-dependency-published.outputs.published == 'true' || steps.check-version-change.outputs.changed == 'true'
        uses: docker/build-push-action@v4
        with:
          build-contexts: |
            workspace=./
          context: "./apps/${{ matrix.app }}"
          load: true
          push: false
          tags: |
            ${{ matrix.app }}:v${{ steps.get-app-version.outputs.app-version }}
